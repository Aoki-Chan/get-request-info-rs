name: Cross-Platform Release

on:
  push:
    tags:
      - 'v*'  # 只有推送 tag 时触发

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: ""
            archive: tar.gz
          - target: x86_64-apple-darwin
            os: macos-latest
            ext: ""
            archive: tar.gz
          - target: x86_64-pc-windows-gnu
            os: windows-latest
            ext: .exe
            archive: zip

    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: List built files
        run: ls -lh target/${{ matrix.target }}/release

      - name: Package binary
        run: |
          cd target/${{ matrix.target }}/release
          ARCHIVE_NAME=get-request-info-rs-${{ matrix.target }}.${{ matrix.archive }}
          BINARY_NAME=get-request-info-rs${{ matrix.ext }}

          if [ "${{ matrix.archive }}" = "zip" ]; then
            zip $ARCHIVE_NAME $BINARY_NAME
          else
            tar czf $ARCHIVE_NAME $BINARY_NAME
          fi

          mv $ARCHIVE_NAME ../../../
        shell: bash

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/get-request-info-rs-x86_64-unknown-linux-gnu.tar.gz
            target/get-request-info-rs-x86_64-apple-darwin.tar.gz
            target/get-request-info-rs-x86_64-pc-windows-gnu.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
